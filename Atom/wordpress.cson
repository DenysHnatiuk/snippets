# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

#
############################################################################
############## WordPress snippets ##########################################
############################################################################
".source.php":
  "Removing 'Order By' Drop-Down on WooCommerce Category Pages":
      "prefix":"woo_rm_order_by"
      "body":"""
        remove_action( 'woocommerce_before_shop_loop', 'woocommerce_catalog_ordering', 30 );
      """
  "Register taxonomy":
      "prefix":"reg_post_type"
      "body":"""
        add_action('init', 'register_post_types');
        function register_post_types(){
        	register_post_type('post_type_name', array(
        		'label'  => null,
        		'labels' => array(
        			'name'               => '____', // основное название для типа записи
        			'singular_name'      => '____', // название для одной записи этого типа
        			'add_new'            => 'Добавить ____', // для добавления новой записи
        			'add_new_item'       => 'Добавление ____', // заголовка у вновь создаваемой записи в админ-панели.
        			'edit_item'          => 'Редактирование ____', // для редактирования типа записи
        			'new_item'           => 'Новое ____', // текст новой записи
        			'view_item'          => 'Смотреть ____', // для просмотра записи этого типа.
        			'search_items'       => 'Искать ____', // для поиска по этим типам записи
        			'not_found'          => 'Не найдено', // если в результате поиска ничего не было найдено
        			'not_found_in_trash' => 'Не найдено в корзине', // если не было найдено в корзине
        			'parent_item_colon'  => '', // для родителей (у древовидных типов)
        			'menu_name'          => '____', // название меню
        		),
        		'description'         => '',
        		'public'              => true,
        		'publicly_queryable'  => null, // зависит от public
        		'exclude_from_search' => null, // зависит от public
        		'show_ui'             => null, // зависит от public
        		'show_in_menu'        => null, // показывать ли в меню адмнки
        		'show_in_admin_bar'   => null, // по умолчанию значение show_in_menu
        		'show_in_nav_menus'   => null, // зависит от public
        		'show_in_rest'        => null, // добавить в REST API. C WP 4.7
        		'rest_base'           => null, // $post_type. C WP 4.7
        		'menu_position'       => null,
        		'menu_icon'           => null,
        		//'capability_type'   => 'post',
        		//'capabilities'      => 'post', // массив дополнительных прав для этого типа записи
        		//'map_meta_cap'      => null, // Ставим true чтобы включить дефолтный обработчик специальных прав
        		'hierarchical'        => false,
        		'supports'            => array('title','editor'), // 'title','editor','author','thumbnail','excerpt','trackbacks','custom-fields','comments','revisions','page-attributes','post-formats'
        		'taxonomies'          => array(),
        		'has_archive'         => false,
        		'rewrite'             => true,
        		'query_var'           => true,
        	) );
        }
      """
    "Background imaged wp thumbnails":
        "prefix":"wp_bg_thumbnails"
        "body":"""
            ?><div class="thumbnail"  style="background: linear-gradient(rgba(0,0,0,0.5) 0%, rgba(0,0,0,0.5) 100%), url(
            <?php
              	if( has_post_thumbnail() ) {
                  	echo get_the_post_thumbnail_url('','full-thumbnail');
                }else {
                    echo get_bloginfo('template_url').'/static/images/default-thumbnail.jpg';
                }
            ?>);background-repeat: no-repeat; background-attachment: fixed; background-size: cover; background-position: center;">
        """
    "MultiPostThumbnails":
        "prefix":"wp_plugin_multithumbnails"
        "body":"""
          if (class_exists('MultiPostThumbnails')) : ?>
            <div class="catalogue-galary">
            <?php if(MultiPostThumbnails::has_post_thumbnail('post', 'thumbnail2')) { ?>
                <div class="catalogue-thumbnail" style="background: linear-gradient(rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.3) 100%),url('<?php echo  MultiPostThumbnails::get_post_thumbnail_url(get_post_type(), "thumbnail2", NULL, "full-thumbnail"); ?>'); background-repeat: no-repeat; background-size: 200%; background-position: center; filter:grayscale(1)"></div>
            <?php} if(MultiPostThumbnails::has_post_thumbnail('post', 'thumbnail3')) { ?>
                <div class="catalogue-thumbnail" style="background: linear-gradient(rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.3) 100%),url('<?php echo  MultiPostThumbnails::get_post_thumbnail_url(get_post_type(), "thumbnail3", NULL, "full-thumbnail"); ?>'); background-repeat: no-repeat; background-size: 200%; background-position: center; filter:grayscale(1)"></div>
            <?php} if(MultiPostThumbnails::has_post_thumbnail('post', 'thumbnail4')) { ?>
                <div class="catalogue-thumbnail" style="background: linear-gradient(rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.3) 100%),url('<?php echo  MultiPostThumbnails::get_post_thumbnail_url(get_post_type(), "thumbnail4", NULL, "full-thumbnail"); ?>'); background-repeat: no-repeat; background-size: 200%; background-position: center; filter:grayscale(1)"></div>
            <?php} if(MultiPostThumbnails::has_post_thumbnail('post', 'thumbnail5')) { ?>
                <div class="catalogue-thumbnail" style="background: linear-gradient(rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.3) 100%),url('<?php echo  MultiPostThumbnails::get_post_thumbnail_url(get_post_type(), "thumbnail5", NULL, "full-thumbnail"); ?>'); background-repeat: no-repeat; background-size: 200%; background-position: center; filter:grayscale(1)"></div>
            <?php} if(MultiPostThumbnails::has_post_thumbnail('post', 'thumbnail6')) { ?>
                <div class="catalogue-thumbnail" style="background: linear-gradient(rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.3) 100%),url('<?php echo  MultiPostThumbnails::get_post_thumbnail_url(get_post_type(), "thumbnail6", NULL, "full-thumbnail"); ?>'); background-repeat: no-repeat; background-size: 200%; background-position: center; filter:grayscale(1)"></div>
            <?php} if(MultiPostThumbnails::has_post_thumbnail('post', 'thumbnail7')) { ?>
                <div class="catalogue-thumbnail" style="background: linear-gradient(rgba(0,0,0,0.3) 0%, rgba(0,0,0,0.3) 100%),url('<?php echo  MultiPostThumbnails::get_post_thumbnail_url(get_post_type(), "thumbnail7", NULL, "full-thumbnail"); ?>'); background-repeat: no-repeat; background-size: 200%; background-position: center; filter:grayscale(1)"></div>
            <?php } ?>
            </div>
  		    <?php	endif;	?>
        """
